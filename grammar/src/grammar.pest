WHITESPACE = _{ " " | "\n" | "\t" | "\r" }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* }

Program = _{ SOI ~ Stmt* ~ EOI }

Stmt             =  { Assign | Decl | If | While | Print | Block }
  Assign         =  { Ident ~ "=" ~ Expr ~ ";" }
  Decl           = _{ (PropertyDecl | StructDecl) ~ ";" }
    Qual         = _{ Var | Let }
      Var        =  { "var" }
      Let        =  { "let" }
    SingleDecl   = _{ Ident ~ ( ":" ~ Ident )? ~ ("=" ~ Expr)? }
    PropertyDecl =  { Qual ~ SingleDecl ~ ("," ~ SingleDecl)* }
    StructDecl   =  { "struct" ~ Ident ~ "{" ~ PropertyDecl ~ (";" ~ PropertyDecl)* ~ "}" }
  If             =  { "if" ~ "(" ~ Expr ~ ")" ~ Stmt ~ ("else" ~ Stmt)? }
  While          =  { "while" ~ "(" ~ Expr ~ ")" ~ Stmt }
  Print          =  { "print" ~ "(" ~ Expr ~ ")" ~ ";" }
  Block          =  { "{" ~ Stmt* ~ "}" }

Expr          =   { OrExpr ~ ( "?" ~ OrExpr ~ ":" ~ OrExpr)* }
OrExpr        =   { AndExpr ~ ( "||" ~ AndExpr)* }
AndExpr       =   { EqExpr ~ ( "&&" ~ EqExpr)* }
EqExpr        =   { CmpExpr ~ ( EqOp ~ CmpExpr )? }
  EqOp        =  _{ Eq | Ne }
    Eq        =   { "==" }
    Ne        =   { "!=" }
CmpExpr       =   { PrattExpr ~ ( CmpOp ~ PrattExpr)? }
  CmpOp       =  _{ Ne | Lt | Le | Gt }
    Lt        =   { "<" }
    Le        =   { "<=" }
    Gt        =   { ">" }
    Ge        =   { ">=" }
PrattExpr     =   { Prefix* ~ Primary ~ (Infix ~ Prefix* ~ Primary )* }
  Infix       =  _{ Add | Sub | Mul | Div | Rem }
    Add       =   { "+" }
    Sub       =   { "-" }
    Mul       =   { "*" }
    Div       =   { "/" }
    Rem       =   { "%" }
  Prefix      =  _{ Neg | Not }
    Neg       =   { "-" }
    Not       =   { "!" }
  Primary     =  _{ Literal | Call | "(" ~ Expr ~ ")" }
    Call      =   { Ident ~ (Args | "." ~ Ident)* }
      Args    =   { "(" ~ (Arg ~ ("," ~ Arg)*)? ~ ")" }
        Arg   =  _{ (Ident ~ ":")? ~ Expr }
    Literal   =  _{ Int | Str | Bool }
      Int     =  @{ ASCII_NONZERO_DIGIT ~ ASCII_DIGIT+ | ASCII_DIGIT }
      Str     =  @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
      Bool    =  _{ True | False }
        True  =   { "true" }
        False =   { "false" }

Ident = @{ ASCII_ALPHA ~ (ASCII_ALPHA | ASCII_DIGIT)* }
